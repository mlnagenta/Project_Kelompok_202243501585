/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com;

/**
 *
 * @author Samsu
 */
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.connection.Connect;
import main.connection.Query;
import java.sql.*;
import java.util.Random;

public class DataKamar extends javax.swing.JFrame {
    private DefaultTableModel tabMode;
    Connection conn = new Connect().connect();
    /**
     * Creates new form DataKamar
     */
    
    protected void GenerateRoomKode(){
        String charset = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"; // karakter yang digunakan untuk kode
        StringBuilder kode = new StringBuilder(6);
        Random random = new Random();
        
        // Menghasilkan kode acak berdasarkan panjang yang ditentukan
        for (int i = 0; i < 6; i++) {
            int index = random.nextInt(charset.length()); // Pilih indeks acak dari charset
            kode.append(charset.charAt(index)); // Tambahkan karakter acak ke kode
        }
        nrField.setText(kode.toString());
    }
    
    protected void DataTable(){
        Object[] Baris = {"Nomor Ruangan","Kapasitas","Harga","Type","Tersedia"};
        tabMode = new DefaultTableModel(null, Baris);
        dataKamar.setModel(tabMode);
        String sql = "SELECT * FROM room";
        try{
            java.sql.Statement state = conn.createStatement();
            ResultSet result = state.executeQuery(sql);
            while(result.next()){
                String nr = result.getString("nomor_ruangan");
                int max = result.getInt("kapasitas");
                long price = result.getLong("harga");
                int total_ruangan = result.getInt("jumlah_kamar");
                String type = result.getString("type");
                String [] data = {nr,String.valueOf(max),String.valueOf(price) + " / Malam",type,String.valueOf(total_ruangan)};
                tabMode.addRow(data);
            }
        }catch(Exception er){
        }
    }
    
    public DataKamar() {
        initComponents();
        DataTable();
        GenerateRoomKode();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        dataKamar = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        nrField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        maxField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        typeField = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jumlahRoomField = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        searchRoom = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Master Room");
        setBackground(new java.awt.Color(204, 255, 255));
        setMinimumSize(new java.awt.Dimension(800, 650));
        setResizable(false);

        dataKamar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nomor Ruangan", "Kapasitas", "Harga", "Type", "Tersedia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataKamar.getTableHeader().setReorderingAllowed(false);
        dataKamar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataKamarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataKamar);
        if (dataKamar.getColumnModel().getColumnCount() > 0) {
            dataKamar.getColumnModel().getColumn(0).setResizable(false);
            dataKamar.getColumnModel().getColumn(0).setPreferredWidth(40);
            dataKamar.getColumnModel().getColumn(0).setHeaderValue("Nomor Ruangan");
            dataKamar.getColumnModel().getColumn(1).setResizable(false);
            dataKamar.getColumnModel().getColumn(1).setPreferredWidth(2);
            dataKamar.getColumnModel().getColumn(1).setHeaderValue("Kapasitas");
            dataKamar.getColumnModel().getColumn(2).setResizable(false);
            dataKamar.getColumnModel().getColumn(2).setHeaderValue("Harga");
            dataKamar.getColumnModel().getColumn(3).setResizable(false);
            dataKamar.getColumnModel().getColumn(3).setHeaderValue("Type");
            dataKamar.getColumnModel().getColumn(4).setResizable(false);
            dataKamar.getColumnModel().getColumn(4).setHeaderValue("Tersedia");
        }

        jLabel1.setText("NOMOR RUANGAN");

        nrField.setEditable(false);

        jLabel2.setText("KAPASITAS");

        jLabel3.setText("HARGA KAMAR");

        jLabel4.setText("TYPE");

        typeField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "STANDAR", "VIP", "VVIP", "LUXURY" }));

        jButton1.setText("Simpan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.setVisible(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.setVisible(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("JUMLAH KAMAR");

        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        searchRoom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchRoomKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jumlahRoomField, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(typeField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(maxField, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nrField, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(312, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nrField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jumlahRoomField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(searchRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void dataKamarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataKamarMouseClicked
        // TODO add your handling code here:
        this.jButton3.setVisible(true);
        this.jButton2.setVisible(true);
        this.jButton1.setVisible(false);
        int bar = dataKamar.getSelectedRow();
        String a = tabMode.getValueAt(bar, 0).toString();
        String b = tabMode.getValueAt(bar, 1).toString();
        String c = tabMode.getValueAt(bar, 2).toString();
        String d = tabMode.getValueAt(bar, 3).toString();
        String e = tabMode.getValueAt(bar, 4).toString();
        
        nrField.setText(a);
        maxField.setText((b));
        priceField.setText(c.replace(" / Malam",""));
        jumlahRoomField.setText(e);
        typeField.setSelectedItem(d);
    }//GEN-LAST:event_dataKamarMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Query main = new Query();
        boolean result = main.UpdateData(nrField.getText(),Integer.valueOf(maxField.getText()), Long.valueOf(priceField.getText()), typeField.getSelectedItem().toString(),Integer.valueOf(jumlahRoomField.getText()));
        if(result){
            JOptionPane.showMessageDialog(this, "Berhasil Di Update");
            nrField.setText("");
            maxField.setText("");
            priceField.setText("");
            jumlahRoomField.setText("");
            DataTable();
            GenerateRoomKode();
            this.jButton3.setVisible(false);
            this.jButton2.setVisible(false);
            this.jButton1.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this,"Gagal Update");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.jButton3.setVisible(false);
        this.jButton2.setVisible(false);
        this.jButton1.setVisible(true);
        nrField.setText("");
        maxField.setText("");
        priceField.setText("");
        jumlahRoomField.setText("");
        searchRoom.setText("");
        DataTable();
        GenerateRoomKode();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Query main = new Query();
        boolean result = main.InsertDataRoom(nrField.getText(),Integer.valueOf(maxField.getText()), Long.valueOf(priceField.getText()), typeField.getSelectedItem().toString(),Integer.valueOf(jumlahRoomField.getText()));
        if(result){
            JOptionPane.showMessageDialog(this, "Berhasil Di Tambah");
            nrField.setText("");
            maxField.setText("");
            priceField.setText("");
            jumlahRoomField.setText("");
            DataTable();
            GenerateRoomKode();
        }else{
            JOptionPane.showMessageDialog(this,"Gagal Tambah");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Query main = new Query();
        
        boolean result = main.DeleteRoom(nrField.getText());
        if(result){
            JOptionPane.showMessageDialog(this, "Berhasil Di Hapus");
            nrField.setText("");
            maxField.setText("");
            priceField.setText("");
            jumlahRoomField.setText("");
            DataTable();
            GenerateRoomKode();
            this.jButton3.setVisible(false);
            this.jButton2.setVisible(false);
            this.jButton1.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this,"Gagal Hapus");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void searchRoomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchRoomKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER){
            String q = searchRoom.getText();
            Object[] Baris = {"Nomor Ruangan","Kapasitas","Harga","Type","Tersedia"};
            tabMode = new DefaultTableModel(null, Baris);
            dataKamar.setModel(tabMode);
            String sql = "SELECT * FROM room WHERE nomor_ruangan LIKE ? OR type LIKE ?";
            try{
                PreparedStatement state = conn.prepareStatement(sql);
                state.setString(1,"%" + q + "%");
                state.setString(2, "%" + q + "%");
                ResultSet result = state.executeQuery();
                while(result.next()){
                    String nr = result.getString("nomor_ruangan");
                    int max = result.getInt("kapasitas");
                    long price = result.getLong("harga");
                    int total_ruangan = result.getInt("jumlah_kamar");
                    String type = result.getString("type");
                    String [] data = {nr,String.valueOf(max),String.valueOf(price),type,String.valueOf(total_ruangan)};
                    tabMode.addRow(data);
                }
            }catch(Exception er){
            }
        }
    }//GEN-LAST:event_searchRoomKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataKamar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable dataKamar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jumlahRoomField;
    private javax.swing.JTextField maxField;
    private javax.swing.JTextField nrField;
    private javax.swing.JTextField priceField;
    private javax.swing.JTextField searchRoom;
    private javax.swing.JComboBox<String> typeField;
    // End of variables declaration//GEN-END:variables
}
